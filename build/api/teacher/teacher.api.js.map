{"version":3,"sources":["../../../src/api/teacher/teacher.api.js"],"names":["condiSearchByName","filterByName","wordSplit","name","split","forEach","word","index","theArray","RegExp","trim","twoWordCondition","$or","$and","firstName","lastName","oneWordCondition","length","getLimit","limit","getSkip","page","skip","createTeacher","req","res","gender","body","teacher","Teacher","result","save","error","console","log","getTeacherList","isActive","query","filterByActive","filterByGender","$in","conditionByName","condition","teachers","total","Promise","all","find","count","message","options","getTeacherById","id","params","findOne","_id","updateTeacherById","data","findOneAndUpdate","$set","deleteTeacherById"],"mappings":"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","file":"teacher.api.js","sourcesContent":["import { failed, succeed } from '../../common/response';\r\nimport { Student, Teacher } from '../../models/teacher';\r\n\r\nconst condiSearchByName = (filterByName) => {\r\n    let wordSplit = { ...filterByName }.name.split(\" \", 2);\r\n\r\n    wordSplit.forEach((word, index, theArray) => { theArray[index] = new RegExp(`${word.trim()}`, \"i\"); });\r\n\r\n    const twoWordCondition = {\r\n        $or: [\r\n            { $and: [{ firstName: wordSplit[0] }, { lastName: wordSplit[1] }] },\r\n            { $and: [{ firstName: wordSplit[1] }, { lastName: wordSplit[0] }] }\r\n        ]\r\n    };\r\n\r\n    const oneWordCondition = { $or: [{ firstName: wordSplit[0] }, { lastName: wordSplit[0] }] };\r\n    return wordSplit.length < 2 ? oneWordCondition : twoWordCondition;\r\n};\r\n\r\nconst getLimit = (limit) => {\r\n    limit = +limit;\r\n    return (limit > 100) ? 100 : limit;\r\n};\r\n\r\nconst getSkip = (page, limit) => {\r\n    page = +page;\r\n    const skip = limit * (page - 1);\r\n    return skip;\r\n};\r\n\r\nexport const createTeacher = async (req, res) => {\r\n    try {\r\n        const { firstName, lastName, gender } = req.body;\r\n        const teacher = new Teacher({ firstName, lastName, gender });\r\n        const result = await teacher.save();\r\n        if (result) succeed(res, result, 200);\r\n        else failed(res, 'Couldn\\'t create teacher', 500);\r\n    } catch (error) {\r\n        console.log(error);\r\n        failed(res, error, 400);\r\n    }\r\n};\r\n\r\nexport const getTeacherList = async (req, res) => {\r\n    try {\r\n        let { limit = 10, page = 1, isActive, gender, name } = req.query;\r\n        limit = getLimit(limit);\r\n        const skip = getSkip(page, limit);\r\n\r\n        const filterByActive = isActive ? { isActive } : { isActive: true };\r\n        const filterByGender = gender ? { gender: { $in: gender } } : { gender: { $in: [\"male\", \"female\"] } };\r\n        const filterByName = name ? { name } : {};\r\n        const conditionByName = name ? condiSearchByName(filterByName) : {};\r\n\r\n        const condition = { ...filterByActive, ...filterByGender };\r\n\r\n        const [teachers, total] = await Promise.all([\r\n            Teacher.find(conditionByName).find(condition)\r\n                .skip(skip)\r\n                .limit(limit),\r\n            Teacher.count(conditionByName).count(condition)\r\n        ]);\r\n\r\n        if (teachers) succeed(res, { message: 'Success', 'Data': teachers, options: { limit, skip, total } }, 200);\r\n        else failed(res, 'Not Found', 404);\r\n    } catch (error) {\r\n        console.log(error);\r\n        failed(res, error, 400);\r\n    }\r\n};\r\n\r\nexport const getTeacherById = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const teacher = await Teacher.findOne({ _id: id, isActive: true });\r\n        if (teacher) succeed(res, { message: 'Success', 'Data': teacher }, 200);\r\n        else failed(res, 'Not Found', 404);\r\n    } catch (error) {\r\n        console.log(error);\r\n        failed(res, error, 400);\r\n    }\r\n};\r\n\r\nexport const updateTeacherById = async (req, res) => {\r\n    try {\r\n        const data = req.body;\r\n        const { id } = req.params;\r\n        const teacher = await Teacher.findOneAndUpdate({ _id: id, isActive: true },{ $set: data });\r\n        if(teacher) succeed(res, {message: 'Updated Sucess', 'Data': teacher}, 200);\r\n        else failed(res, {message: 'Student not found'}, 404);\r\n    } catch (error) {\r\n        console.log(error);\r\n        failed(res, error, 400);\r\n    }\r\n};\r\n\r\nexport const deleteTeacherById = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const teacher = await Teacher.findOneAndUpdate({ _id: id, isActive: true },{ $set: {isActive: false} });\r\n        if(teacher) succeed(res, {message: 'Deleted Sucess'}, 200);\r\n        else failed(res, {message: 'Student not found'}, 404);\r\n    } catch (error) {\r\n        console.log(error);\r\n        failed(res, error, 400);\r\n    }\r\n};"]}