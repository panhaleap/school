{"version":3,"sources":["../../../src/api/teacher/teacher.api.js"],"names":["condiSearchByName","filterByName","wordSplit","name","split","forEach","word","index","theArray","RegExp","trim","twoWordCondition","$or","$and","firstName","lastName","oneWordCondition","length","getLimit","limit","getSkip","page","skip","createTeacher","req","res","gender","body","teacher","Teacher","result","save","error","console","log","getTeacherList","isActive","query","filterByActive","filterByGender","$in","conditionByName","condition","teachers","total","Promise","all","find","count","message","Data","options","getTeacherById","id","params","findOne","_id","updateTeacherById","data","findOneAndUpdate","$set","deleteTeacherById"],"mappings":"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","file":"teacher.api.js","sourcesContent":["import { failed, succeed } from '../../common/response';\r\nimport { Teacher } from '../../models/teacher';\r\n\r\nconst condiSearchByName = filterByName => {\r\n  let wordSplit = { ...filterByName }.name.split(' ', 2);\r\n\r\n  wordSplit.forEach((word, index, theArray) => {\r\n    theArray[index] = new RegExp(`${word.trim()}`, 'i');\r\n  });\r\n\r\n  const twoWordCondition = {\r\n    $or: [\r\n      { $and: [{ firstName: wordSplit[0] }, { lastName: wordSplit[1] }] },\r\n      { $and: [{ firstName: wordSplit[1] }, { lastName: wordSplit[0] }] }\r\n    ]\r\n  };\r\n\r\n  const oneWordCondition = { $or: [{ firstName: wordSplit[0] }, { lastName: wordSplit[0] }] };\r\n  return wordSplit.length < 2 ? oneWordCondition : twoWordCondition;\r\n};\r\n\r\nconst getLimit = limit => {\r\n  limit = +limit;\r\n  return limit > 100 ? 100 : limit;\r\n};\r\n\r\nconst getSkip = (page, limit) => {\r\n  page = +page;\r\n  const skip = limit * (page - 1);\r\n  return skip;\r\n};\r\n\r\nexport const createTeacher = async (req, res) => {\r\n  try {\r\n    const { firstName, lastName, gender } = req.body;\r\n    const teacher = new Teacher({ firstName, lastName, gender });\r\n    const result = await teacher.save();\r\n    if (result) succeed(res, result, 200);\r\n    else failed(res, \"Couldn't create teacher\", 500);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const getTeacherList = async (req, res) => {\r\n  try {\r\n    let { limit = 10, page = 1, isActive, gender, name } = req.query;\r\n    limit = getLimit(limit);\r\n    const skip = getSkip(page, limit);\r\n\r\n    const filterByActive = isActive ? { isActive } : { isActive: true };\r\n    const filterByGender = gender ? { gender: { $in: gender } } : { gender: { $in: ['male', 'female'] } };\r\n    const filterByName = name ? { name } : {};\r\n    const conditionByName = name ? condiSearchByName(filterByName) : {};\r\n\r\n    const condition = { ...filterByActive, ...filterByGender };\r\n\r\n    const [teachers, total] = await Promise.all([\r\n      Teacher.find(conditionByName)\r\n        .find(condition)\r\n        .skip(skip)\r\n        .limit(limit),\r\n      Teacher.count(conditionByName).count(condition)\r\n    ]);\r\n\r\n    if (teachers) succeed(res, { message: 'Success', Data: teachers, options: { limit, skip, total } }, 200);\r\n    else failed(res, 'Not Found', 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const getTeacherById = async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const teacher = await Teacher.findOne({ _id: id, isActive: true });\r\n    if (teacher) succeed(res, { message: 'Success', Data: teacher }, 200);\r\n    else failed(res, 'Not Found', 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const updateTeacherById = async (req, res) => {\r\n  try {\r\n    const data = req.body;\r\n    const { id } = req.params;\r\n    const teacher = await Teacher.findOneAndUpdate({ _id: id, isActive: true }, { $set: data });\r\n    if (teacher) succeed(res, { message: 'Updated Sucess', Data: teacher }, 200);\r\n    else failed(res, { message: 'Student not found' }, 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const deleteTeacherById = async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const teacher = await Teacher.findOneAndUpdate({ _id: id, isActive: true }, { $set: { isActive: false } });\r\n    if (teacher) succeed(res, { message: 'Deleted Sucess' }, 200);\r\n    else failed(res, { message: 'Student not found' }, 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n"]}