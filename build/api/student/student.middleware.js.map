{"version":3,"sources":["../../../src/api/student/student.middleware.js"],"names":["studentCreatedSchema","Joi","object","keys","firstName","string","alphanum","max","required","lastNam","with","studentUpdatedSchema","studentQuerySchema","limit","number","page","checkCreatedStudent","req","res","next","error","valid","body","console","log","checkQueryStudent","validate","query","name","message"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA,MAAMA,uBAAuBC,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC3CC,eAAWH,cAAII,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,EAA5B,EAAgCC,QAAhC,EADgC;AAE3CC,aAASR,cAAII,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,EAA5B,EAAgCC,QAAhC;AAFkC,CAAlB,EAG1BE,IAH0B,CAGrB,WAHqB,EAGR,UAHQ,CAA7B;;AAKA,MAAMC,uBAAuBV,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC3CC,eAAWH,cAAII,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,EAA5B,CADgC;AAE3CE,aAASR,cAAII,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,EAA5B;AAFkC,CAAlB,EAG1BG,IAH0B,CAGrB,WAHqB,EAGR,UAHQ,CAA7B;;AAKA,MAAME,qBAAqBX,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AACzCU,WAAOZ,cAAIa,MAAJ,EADkC;AAEzCC,UAAMd,cAAIa,MAAJ;AAFmC,CAAlB,CAA3B;;AAKO,MAAME,oDAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnD,UAAM,EAAEC,KAAF,KAAYnB,cAAIoB,KAAJ,CAAUJ,IAAIK,IAAd,EAAoBtB,oBAApB,CAAlB;AACA,QAAIoB,UAAU,IAAd,EAAoB;AAACD;AAAQ,KAA7B,MACK;AACDI,gBAAQC,GAAR,CAAYJ,KAAZ;AACA,uCAAgBF,GAAhB,EAAqBE,KAArB,EAA4B,GAA5B;AAAkC;AACzC,CANM;;AAQA,MAAMK,gDAAoB,CAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjD,UAAM,EAAEC,KAAF,KAAYnB,cAAIyB,QAAJ,CAAaT,IAAIU,KAAjB,EAAwBf,kBAAxB,CAAlB;AACA,QAAIQ,UAAU,IAAd,EAAoBD,OAApB,KACK,+BAAgBD,GAAhB,EAAqB,EAAE,SAASE,MAAMQ,IAAjB,EAAuB,WAAWR,MAAMS,OAAxC,EAArB,EAAwE,GAAxE;AACR,CAJM","file":"student.middleware.js","sourcesContent":["import Joi from 'joi';\r\nimport { errorValidation } from '../../common/response';\r\n\r\nconst studentCreatedSchema = Joi.object().keys({\r\n    firstName: Joi.string().alphanum().max(30).required(),\r\n    lastNam: Joi.string().alphanum().max(30).required()\r\n}).with('firstName', 'lastName');\r\n\r\nconst studentUpdatedSchema = Joi.object().keys({\r\n    firstName: Joi.string().alphanum().max(30),\r\n    lastNam: Joi.string().alphanum().max(30)\r\n}).with('firstName', 'lastName');\r\n\r\nconst studentQuerySchema = Joi.object().keys({\r\n    limit: Joi.number(),\r\n    page: Joi.number()\r\n});\r\n\r\nexport const checkCreatedStudent = (req, res, next) => {    \r\n    const { error } = Joi.valid(req.body, studentCreatedSchema);\r\n    if (error === null) {next();}\r\n    else {\r\n        console.log(error);\r\n        errorValidation(res, error, 422);}\r\n};\r\n\r\nexport const checkQueryStudent = (req, res, next) => {\r\n    const { error } = Joi.validate(req.query, studentQuerySchema);\r\n    if (error === null) next();\r\n    else errorValidation(res, { 'error': error.name, 'message': error.message }, 422);\r\n};"]}