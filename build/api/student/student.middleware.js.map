{"version":3,"sources":["../../../src/api/student/student.middleware.js"],"names":["studentCreatedSchema","Joi","object","keys","firstName","string","alphanum","max","required","lastNam","with","studentUpdatedSchema","studentQuerySchema","limit","number","page","checkCreatedStudent","req","res","next","error","valid","body","console","log","checkQueryStudent","validate","query","name","message"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA,MAAMA,uBAAuBC,cAAIC,MAAJ,GAC1BC,IAD0B,CACrB;AACJC,aAAWH,cAAII,MAAJ,GACRC,QADQ,GAERC,GAFQ,CAEJ,EAFI,EAGRC,QAHQ,EADP;AAKJC,WAASR,cAAII,MAAJ,GACNC,QADM,GAENC,GAFM,CAEF,EAFE,EAGNC,QAHM;AALL,CADqB,EAW1BE,IAX0B,CAWrB,WAXqB,EAWR,UAXQ,CAA7B;;AAaA,MAAMC,uBAAuBV,cAAIC,MAAJ,GAC1BC,IAD0B,CACrB;AACJC,aAAWH,cAAII,MAAJ,GACRC,QADQ,GAERC,GAFQ,CAEJ,EAFI,CADP;AAIJE,WAASR,cAAII,MAAJ,GACNC,QADM,GAENC,GAFM,CAEF,EAFE;AAJL,CADqB,EAS1BG,IAT0B,CASrB,WATqB,EASR,UATQ,CAA7B;;AAWA,MAAME,qBAAqBX,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC3CU,SAAOZ,cAAIa,MAAJ,EADoC;AAE3CC,QAAMd,cAAIa,MAAJ;AAFqC,CAAlB,CAA3B;;AAKO,MAAME,oDAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrD,QAAM,EAAEC,KAAF,KAAYnB,cAAIoB,KAAJ,CAAUJ,IAAIK,IAAd,EAAoBtB,oBAApB,CAAlB;AACA,MAAIoB,UAAU,IAAd,EAAoB;AAClBD;AACD,GAFD,MAEO;AACLI,YAAQC,GAAR,CAAYJ,KAAZ;AACA,mCAAgBF,GAAhB,EAAqBE,KAArB,EAA4B,GAA5B;AACD;AACF,CARM;;AAUA,MAAMK,gDAAoB,CAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnD,QAAM,EAAEC,KAAF,KAAYnB,cAAIyB,QAAJ,CAAaT,IAAIU,KAAjB,EAAwBf,kBAAxB,CAAlB;AACA,MAAIQ,UAAU,IAAd,EAAoBD,OAApB,KACK,+BAAgBD,GAAhB,EAAqB,EAAEE,OAAOA,MAAMQ,IAAf,EAAqBC,SAAST,MAAMS,OAApC,EAArB,EAAoE,GAApE;AACN,CAJM","file":"student.middleware.js","sourcesContent":["import Joi from 'joi';\r\nimport { errorValidation } from '../../common/response';\r\n\r\nconst studentCreatedSchema = Joi.object()\r\n  .keys({\r\n    firstName: Joi.string()\r\n      .alphanum()\r\n      .max(30)\r\n      .required(),\r\n    lastNam: Joi.string()\r\n      .alphanum()\r\n      .max(30)\r\n      .required()\r\n  })\r\n  .with('firstName', 'lastName');\r\n\r\nconst studentUpdatedSchema = Joi.object()\r\n  .keys({\r\n    firstName: Joi.string()\r\n      .alphanum()\r\n      .max(30),\r\n    lastNam: Joi.string()\r\n      .alphanum()\r\n      .max(30)\r\n  })\r\n  .with('firstName', 'lastName');\r\n\r\nconst studentQuerySchema = Joi.object().keys({\r\n  limit: Joi.number(),\r\n  page: Joi.number()\r\n});\r\n\r\nexport const checkCreatedStudent = (req, res, next) => {\r\n  const { error } = Joi.valid(req.body, studentCreatedSchema);\r\n  if (error === null) {\r\n    next();\r\n  } else {\r\n    console.log(error);\r\n    errorValidation(res, error, 422);\r\n  }\r\n};\r\n\r\nexport const checkQueryStudent = (req, res, next) => {\r\n  const { error } = Joi.validate(req.query, studentQuerySchema);\r\n  if (error === null) next();\r\n  else errorValidation(res, { error: error.name, message: error.message }, 422);\r\n};\r\n"]}