{"version":3,"sources":["../../../src/api/student/student.api.js"],"names":["condiSearchByName","filterByName","wordSplit","name","split","forEach","word","index","theArray","RegExp","trim","twoWordCondition","$or","$and","firstName","lastName","oneWordCondition","length","getLimit","limit","getSkip","page","skip","createStudent","req","res","age","gender","scoreDetail","body","student","Student","result","save","error","console","log","getStudentList","isActive","query","filterByActive","filterByGender","$in","conditionByName","condition","students","total","Promise","all","find","count","message","Data","options","getStudentById","id","params","findOne","_id","updateStudentById","data","findOneAndUpdate","$set","deleteStudentById"],"mappings":"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","file":"student.api.js","sourcesContent":["import { failed, succeed } from '../../common/response';\r\nimport { Student } from '../../models/student';\r\n\r\nconst condiSearchByName = filterByName => {\r\n  let wordSplit = { ...filterByName }.name.split(' ', 2);\r\n\r\n  wordSplit.forEach((word, index, theArray) => {\r\n    theArray[index] = new RegExp(`${word.trim()}`, 'i');\r\n  });\r\n\r\n  const twoWordCondition = {\r\n    $or: [\r\n      { $and: [{ firstName: wordSplit[0] }, { lastName: wordSplit[1] }] },\r\n      { $and: [{ firstName: wordSplit[1] }, { lastName: wordSplit[0] }] }\r\n    ]\r\n  };\r\n\r\n  const oneWordCondition = { $or: [{ firstName: wordSplit[0] }, { lastName: wordSplit[0] }] };\r\n  return wordSplit.length < 2 ? oneWordCondition : twoWordCondition;\r\n};\r\n\r\nconst getLimit = limit => {\r\n  limit = +limit;\r\n  return limit > 100 ? 100 : limit;\r\n};\r\n\r\nconst getSkip = (page, limit) => {\r\n  page = +page;\r\n  const skip = limit * (page - 1);\r\n  return skip;\r\n};\r\n\r\nexport const createStudent = async (req, res) => {\r\n  try {\r\n    const { firstName, lastName, age, gender, scoreDetail } = req.body;\r\n    const student = new Student({ firstName, lastName, age, gender, scoreDetail });\r\n    const result = await student.save();\r\n    if (result) succeed(res, result, 200);\r\n    else failed(res, \"Couldn't create student\", 500);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const getStudentList = async (req, res) => {\r\n  try {\r\n    let { limit = 10, page = 1, isActive, gender, name } = req.query;\r\n    console.log(name);\r\n    limit = getLimit(limit);\r\n    const skip = getSkip(page, limit);\r\n\r\n    const filterByActive = isActive ? { isActive } : { isActive: true };\r\n    const filterByGender = gender ? { gender: { $in: gender } } : { gender: { $in: ['male', 'female'] } };\r\n    console.log(filterByGender);\r\n    const filterByName = name ? { name } : {};\r\n    const conditionByName = name ? condiSearchByName(filterByName) : {};\r\n\r\n    const condition = { ...filterByActive, ...filterByGender };\r\n\r\n    const [students, total] = await Promise.all([\r\n      Student.find(conditionByName)\r\n        .find(condition)\r\n        .skip(skip)\r\n        .limit(limit),\r\n      Student.count(conditionByName).count(condition)\r\n    ]);\r\n\r\n    if (students) succeed(res, { message: 'Success', Data: students, options: { limit, skip, total } }, 200);\r\n    else failed(res, 'Not Found', 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const getStudentById = async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const student = await Student.findOne({ _id: id, isActive: true });\r\n    if (student) succeed(res, { message: 'Success', Data: student }, 200);\r\n    else failed(res, 'Not Found', 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const updateStudentById = async (req, res) => {\r\n  try {\r\n    const data = req.body;\r\n    const { id } = req.params;\r\n    const student = await Student.findOneAndUpdate({ _id: id, isActive: true }, { $set: data });\r\n    if (student) succeed(res, { message: 'Updated Sucess', Data: student }, 200);\r\n    else failed(res, { message: 'Student not found' }, 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n\r\nexport const deleteStudentById = async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const student = await Student.findOneAndUpdate({ _id: id, isActive: true }, { $set: { isActive: false } });\r\n    if (student) succeed(res, { message: 'Deleted Sucess' }, 200);\r\n    else failed(res, { message: 'Student not found' }, 404);\r\n  } catch (error) {\r\n    console.log(error);\r\n    failed(res, error, 400);\r\n  }\r\n};\r\n"]}